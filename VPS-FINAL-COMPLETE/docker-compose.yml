version: '3.8'

services:
  # MongoDB Database
  mongodb:
    image: mongo:7.0
    container_name: kayee01-mongodb
    restart: always
    environment:
      MONGO_INITDB_ROOT_USERNAME: kayee01_admin
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_PASSWORD}
      MONGO_INITDB_DATABASE: kayee01_db
    volumes:
      - mongodb_data:/data/db
      - mongodb_config:/data/configdb
    ports:
      - "127.0.0.1:27017:27017"
    networks:
      - kayee01-network
    command: mongod --auth

  # Backend FastAPI
  backend:
    build:
      context: .
      dockerfile: Dockerfile.backend
    container_name: kayee01-backend
    restart: always
    environment:
      - MONGO_URL=mongodb://kayee01_admin:${MONGO_PASSWORD}@mongodb:27017/kayee01_db?authSource=admin
      - DB_NAME=kayee01_db
      - JWT_SECRET_KEY=${JWT_SECRET_KEY}
      - SMTP_HOST=smtp.gmail.com
      - SMTP_PORT=587
      - SMTP_USER=${SMTP_USER}
      - SMTP_PASSWORD=${SMTP_PASSWORD}
      - FROM_EMAIL=${FROM_EMAIL}
      - FROM_NAME=${FROM_NAME}
      - ADMIN_EMAIL_1=${ADMIN_EMAIL_1}
      - ADMIN_EMAIL_2=${ADMIN_EMAIL_2}
      - STRIPE_SECRET_KEY=${STRIPE_SECRET_KEY}
      - PLISIO_API_KEY=${PLISIO_API_KEY}
      - FRONTEND_URL=https://${DOMAIN_NAME}
      - CORS_ORIGINS=https://${DOMAIN_NAME},http://${DOMAIN_NAME}
    volumes:
      - uploads_data:/app/backend/uploads
    ports:
      - "127.0.0.1:8001:8001"
    depends_on:
      - mongodb
    networks:
      - kayee01-network

  # Frontend React
  frontend:
    build:
      context: .
      dockerfile: Dockerfile.frontend
      args:
        - REACT_APP_BACKEND_URL=https://${DOMAIN_NAME}
    container_name: kayee01-frontend
    restart: always
    ports:
      - "127.0.0.1:3000:80"
    networks:
      - kayee01-network

  # Nginx Reverse Proxy
  nginx:
    image: nginx:alpine
    container_name: kayee01-nginx
    restart: always
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
      - certbot_data:/var/www/certbot
    depends_on:
      - frontend
      - backend
    networks:
      - kayee01-network

  # Certbot for SSL
  certbot:
    image: certbot/certbot
    container_name: kayee01-certbot
    volumes:
      - certbot_data:/var/www/certbot
      - ./ssl:/etc/letsencrypt
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"

volumes:
  mongodb_data:
  mongodb_config:
  uploads_data:
  certbot_data:

networks:
  kayee01-network:
    driver: bridge
